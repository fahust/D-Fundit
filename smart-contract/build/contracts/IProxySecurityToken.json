{
  "contractName": "IProxySecurityToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_securityTokenImmutableAddress",
          "type": "address"
        }
      ],
      "name": "setSecurityTokenImmutable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "eligibleBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refoundable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "canTransfer",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "",
          "type": "bytes1"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "forceTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getFrozenTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "freeze",
          "type": "bool"
        }
      ],
      "name": "setAddressFrozen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "userAddresses",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "freeze",
          "type": "bool[]"
        }
      ],
      "name": "batchSetAddressFrozen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "freezePartialTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "userAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchFreezePartialTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unfreezePartialTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "userAddresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchUnfreezePartialTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountFreezed",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "setFreezedTokensPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myFreezedTokensPeriod",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountFreezed",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenLibrary.FreezePeriod",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getFreezedTokensPeriod",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountFreezed",
              "type": "uint256"
            }
          ],
          "internalType": "struct TokenLibrary.FreezePeriod",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockableTokensPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemFreezedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weiWithdrawable",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchFreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"freeze\",\"type\":\"bool[]\"}],\"name\":\"batchSetAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchUnfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"eligibleBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"forceTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"freezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFreezedTokensPeriod\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountFreezed\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenLibrary.FreezePeriod\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myFreezedTokensPeriod\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountFreezed\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenLibrary.FreezePeriod\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemFreezedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refoundable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"setAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountFreezed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"setFreezedTokensPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_securityTokenImmutableAddress\",\"type\":\"address\"}],\"name\":\"setSecurityTokenImmutable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockableTokensPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weiWithdrawable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchFreezePartialTokens(address[],uint256[])\":{\"params\":{\"amounts\":\"{uint256[]} of amounts of token to be unfreezed\",\"userAddresses\":\"{address[]} of user addresses\"}},\"batchSetAddressFrozen(address[],bool[])\":{\"params\":{\"freeze\":\"{bool[]} representing freezing\",\"userAddresses\":\"{address[]} of user addresses\"}},\"batchUnfreezePartialTokens(address[],uint256[])\":{\"params\":{\"amounts\":\"{uint256[]} of amounts of token to be unfreezed\",\"userAddresses\":\"{address[]} of user addresses\"}},\"burn(address,uint256)\":{\"params\":{\"account\":\"{address} wallet to burn the token\",\"amount\":\"{uint256} amount to burn\"}},\"canTransfer(address,address,address,uint256)\":{\"params\":{\"from\":\"{address} the origin of the token transfer\",\"operator\":\"{address} operator of transaction (sender)\",\"to\":\"{address} the recipient of the token transfer\",\"value\":\"{uint256} the number of tokens transferred\"},\"returns\":{\"_0\":\"hex {bytes1} code error message\"}},\"eligibleBalanceOf(address)\":{\"params\":{\"account\":\"{address} wallet address of account you want to get not freezed balance\"},\"returns\":{\"_0\":\"balance {uint256} balance of wallet address totaly open\"}},\"forceTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"{uint256} amounts of tokens to be transfered\",\"from\":\"{address} from wallet to transfer\",\"to\":\"{address} to wallet to transfer\"}},\"freezePartialTokens(address,uint256)\":{\"params\":{\"amount\":\"{uint256} of token to be unfreezed\",\"userAddress\":\"{address} of the user\"}},\"getFreezedTokensPeriod(address)\":{\"params\":{\"userAddress\":\"{address} of the user freezed tokens\"},\"returns\":{\"_0\":\"freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period\"}},\"getFrozenTokens(address)\":{\"params\":{\"userAddress\":\"{address} of the user\"},\"returns\":{\"_0\":\"frozenTokens {uint256} amount of freezed tokens\"}},\"isFrozen(address)\":{\"params\":{\"userAddress\":\"{address} of the user\"},\"returns\":{\"_0\":\"frozen {bool} represents freezed wallet address\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"{uint256} amount to mint\",\"to\":\"{address} wallet to send the token\"},\"returns\":{\"_0\":\"result {boolean} success or failure\"}},\"myFreezedTokensPeriod()\":{\"returns\":{\"_0\":\"freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period\"}},\"owner()\":{\"returns\":{\"_0\":\"owner {address} wallet addres from owner\"}},\"redeemFreezedTokens()\":{\"returns\":{\"_0\":\"success {bool} success of redeeming tokens\"}},\"refoundable(uint256)\":{\"params\":{\"amount\":\"{uint256} amout of tokens burn\"},\"returns\":{\"_0\":\"wei {uint256} amount of wei refoundable\"}},\"setAddressFrozen(address,bool)\":{\"params\":{\"freeze\":\"{boolean} representing freezing\",\"userAddress\":\"{address} of the user\"}},\"setFreezedTokensPeriod(uint256,uint256,uint256,address)\":{\"params\":{\"amountFreezed\":\"{uint256} Amount of frozen token\",\"endTime\":\"{uint256} End time of freezing partial token\",\"startTime\":\"{uint256} Start time of freezing partial token\",\"userAddress\":\"{address} Address wallet of the user frozen token\"}},\"setSecurityTokenImmutable(address)\":{\"params\":{\"_securityTokenImmutableAddress\":\"{address} address of security token immutable contract\"}},\"transfer(address,uint256)\":{\"details\":\"Transfer and send `amount` tokens from `_msgSender()` to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\",\"params\":{\"amount\":\"{uint256[]} amount to transfer\",\"to\":\"{address} wallet to transfer the token\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer and send `amount` tokens from `from` to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\",\"params\":{\"amount\":\"{uint256[]} amount to transfer\",\"from\":\"{address} wallet from transfer the token\",\"to\":\"{address} wallet to transfer the token\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"{address} address of the new owner\"}},\"unfreezePartialTokens(address,uint256)\":{\"params\":{\"amount\":\"{uint256} of token to be unfreezed\",\"userAddress\":\"{address} of the user\"}},\"unlockableTokensPeriod()\":{\"returns\":{\"_0\":\"unlockable {uint256} of unlockable tokens freezed in period\"}},\"version()\":{\"returns\":{\"_0\":\"TOKEN_VERSION {string} version of the smart contract\"}},\"withdraw(uint256,address)\":{\"params\":{\"amount\":\"{uint256} the number of tokens transferred\",\"receiver\":\"{address} the recipient of the token transfer\"}},\"withdrawable(uint256)\":{\"params\":{\"amount\":\"{uint256} the number of tokens withdraw\"},\"returns\":{\"weiWithdrawable\":\"{uint256} the number of wei transferrable\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchFreezePartialTokens(address[],uint256[])\":{\"notice\":\"Freeze patial tokens of multiples wallets\"},\"batchSetAddressFrozen(address[],bool[])\":{\"notice\":\"Freeze totality tokens of multiples wallet addresses\"},\"batchUnfreezePartialTokens(address[],uint256[])\":{\"notice\":\"Unfreeze patial tokens of multiples wallets\"},\"burn(address,uint256)\":{\"notice\":\"Remove `amount` tokens from `account` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"canTransfer(address,address,address,uint256)\":{\"notice\":\"Interface of transfer method, return hex code error message\"},\"eligibleBalanceOf(address)\":{\"notice\":\"Return not freezed tokens from an address wallet\"},\"forceTransfer(address,address,uint256)\":{\"notice\":\"Force an address wallet to transfer by agent\"},\"freezePartialTokens(address,uint256)\":{\"notice\":\"Freeze patial tokens of single wallet\"},\"getFreezedTokensPeriod(address)\":{\"notice\":\"Retrieve struct of freezed tokens in period of one wallet address by agent\"},\"getFrozenTokens(address)\":{\"notice\":\"Return freezed tokens amount of wallet address\"},\"isFrozen(address)\":{\"notice\":\"Return freezed or not wallet address tokens\"},\"mint(address,uint256)\":{\"notice\":\"Mint and send `amount` tokens to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"myFreezedTokensPeriod()\":{\"notice\":\"Retrieve struct of freezed tokens in period of msg.sender\"},\"owner()\":{\"notice\":\"Returns the address wallet of the smart contract owner.\"},\"redeemFreezedTokens()\":{\"notice\":\"Redeem unlockable freezed tokens periodically\"},\"refoundable(uint256)\":{\"notice\":\"Return amount of refoundable for amount of tokens burned\"},\"setAddressFrozen(address,bool)\":{\"notice\":\"Freeze totality tokens of single wallet address\"},\"setFreezedTokensPeriod(uint256,uint256,uint256,address)\":{\"notice\":\"Freeze token of one address wallet periodically\"},\"setSecurityTokenImmutable(address)\":{\"notice\":\"set the contract address of security token immutable\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of the smart contract\"},\"unfreezePartialTokens(address,uint256)\":{\"notice\":\"Unfreeze patial tokens of single wallet\"},\"unlockableTokensPeriod()\":{\"notice\":\"Get unlockable tokens freezed in period for msg.sender\"},\"version()\":{\"notice\":\"Returns the version of the token contract\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraw tokens amount of contract balance\"},\"withdrawable(uint256)\":{\"notice\":\"Check amount of withdrawable\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IProxySecurityToken.sol\":\"IProxySecurityToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/immutable/StorageToken.sol\":{\"keccak256\":\"0xbbce2571b090246666fce0253b4c349102857e2f7e665896fff666f43732330b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e25b487a49c1e16a34bddd94325d4eac96be896a7e470ba472a295672df041fc\",\"dweb:/ipfs/QmbW5J4ytpQ9GS5wmmtsXeveVLrCX6KqC63YUngJUsDnPx\"]},\"project:/contracts/interfaces/IProxySecurityToken.sol\":{\"keccak256\":\"0xcc577ad3330fcb9f5d0196d027d628cb2f31c1082dbe98655aa3484d86bb300d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3da8aa8b82fb7896363d28fec5bc65a3ba81a9b6d7b49fc5543be21e930c17d2\",\"dweb:/ipfs/Qmb2TW2o6ARNGi29ALBzRQYLAYXBnBTwuFif5fey6aGanR\"]},\"project:/contracts/interfaces/ISecurityTokenImmutable.sol\":{\"keccak256\":\"0x4ed71013c0f3e491b64ddf134f632b9193b59bb397b94703cdbddb6247dbc33c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3541e0fc6e3e3bebcd5b4d09fcd7ee6f89222326b2259413f10e68e59c8ad53\",\"dweb:/ipfs/QmbdNvQMT1iW4Nmgidv8TBKQ42LtWssowcAhycuJXczMpK\"]},\"project:/contracts/library/TokenLibrary.sol\":{\"keccak256\":\"0x9a28a8a3abc002b0a98ae629f3cf42074d2dab60491cecb6e3b7abacd1d88367\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c75cc44551ee6adb99a1ec282e605d9146eeafcfd0babb8a3b80e2aab33031f\",\"dweb:/ipfs/QmZakDUgW5qeBvMTbY4moUUobQxK5mh6ZwvMJteBuw1Q9K\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\nimport \"../immutable/StorageToken.sol\";\nimport \"../library/TokenLibrary.sol\";\nimport \"../interfaces/ISecurityTokenImmutable.sol\";\n\ninterface IProxySecurityToken {\n\n    /**\n     * @notice set the contract address of security token immutable\n     * @param _securityTokenImmutableAddress {address} address of security token immutable contract\n     */\n    function setSecurityTokenImmutable(address _securityTokenImmutableAddress) external;\n\n    /**\n     * @notice Returns the version of the token contract\n     * @return TOKEN_VERSION {string} version of the smart contract\n     */\n    function version() external pure returns (string memory);\n\n    /**\n     * @notice Returns the address wallet of the smart contract owner.\n     * @return owner {address} wallet addres from owner\n     */\n    function owner() external view returns (address);\n\n    /**\n     * @notice Transfer ownership of the smart contract\n     * @param account {address} address of the new owner\n     */\n    function transferOwnership(address account) external;\n\n    /**\n     * @notice Return not freezed tokens from an address wallet\n     * @param account {address} wallet address of account you want to get not freezed balance\n     * @return balance {uint256} balance of wallet address totaly open\n     */\n    function eligibleBalanceOf(address account) external view returns(uint256);\n\n    /**\n     * @notice Mint and send `amount` tokens to `to`\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     * @param to {address} wallet to send the token\n     * @param amount {uint256} amount to mint\n     * @return result {boolean} success or failure\n     */\n    function mint(address to, uint256 amount) external payable returns (bool);\n\n    /**\n     * @notice Remove `amount` tokens from `account`\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     * @param account {address} wallet to burn the token\n     * @param amount {uint256} amount to burn\n     */\n    function burn(address account, uint256 amount) external returns (bool);\n\n    /**\n     * @notice Return amount of refoundable for amount of tokens burned\n     * @param amount {uint256} amout of tokens burn\n     * @return wei {uint256} amount of wei refoundable\n     */\n    function refoundable(uint256 amount) external view returns(uint256);\n\n    /**\n     * @dev Transfer and send `amount` tokens from `_msgSender()` to `to`\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     * @param to {address} wallet to transfer the token\n     * @param amount {uint256[]} amount to transfer\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Transfer and send `amount` tokens from `from` to `to`\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     * @param from {address} wallet from transfer the token\n     * @param to {address} wallet to transfer the token\n     * @param amount {uint256[]} amount to transfer\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n\n    /**\n     * @notice Interface of transfer method, return hex code error message\n     * @param operator {address} operator of transaction (sender)\n     * @param from {address} the origin of the token transfer\n     * @param to {address} the recipient of the token transfer\n     * @param value {uint256} the number of tokens transferred\n     * @return hex {bytes1} code error message\n     */\n    function canTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 value\n    ) external view returns (bytes1);\n\n    /**\n     *  @notice Force an address wallet to transfer by agent\n     *  @param from {address} from wallet to transfer\n     *  @param to {address} to wallet to transfer\n     *  @param amount {uint256} amounts of tokens to be transfered\n     */\n    function forceTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     *  @notice Return freezed or not wallet address tokens\n     *  @param userAddress {address} of the user\n     *  @return frozen {bool} represents freezed wallet address\n     */\n    function isFrozen(address userAddress) external view returns (bool);\n\n    /**\n     *  @notice Return freezed tokens amount of wallet address\n     *  @param userAddress {address} of the user\n     *  @return frozenTokens {uint256} amount of freezed tokens\n     */\n    function getFrozenTokens(address userAddress) external view returns (uint256);\n\n    /**\n     *  @notice Freeze totality tokens of single wallet address\n     *  @param userAddress {address} of the user\n     *  @param freeze {boolean} representing freezing\n     */\n    function setAddressFrozen(address userAddress, bool freeze) external;\n\n    /**\n     *  @notice Freeze totality tokens of multiples wallet addresses\n     *  @param userAddresses {address[]} of user addresses\n     *  @param freeze {bool[]} representing freezing\n     */\n    function batchSetAddressFrozen(address[] calldata userAddresses, bool[] calldata freeze) external;\n\n\n    /**\n     *  @notice Freeze patial tokens of single wallet\n     *  @param userAddress {address} of the user\n     *  @param amount {uint256} of token to be unfreezed\n     */\n    function freezePartialTokens(address userAddress, uint256 amount) external;\n\n    /**\n     *  @notice Freeze patial tokens of multiples wallets\n     *  @param userAddresses {address[]} of user addresses\n     *  @param amounts {uint256[]} of amounts of token to be unfreezed\n     */\n    function batchFreezePartialTokens(address[] calldata userAddresses, uint256[] calldata amounts) external;\n\n    /**\n     *  @notice Unfreeze patial tokens of single wallet\n     *  @param userAddress {address} of the user\n     *  @param amount {uint256} of token to be unfreezed\n     */\n    function unfreezePartialTokens(address userAddress, uint256 amount) external;\n\n    /**\n     *  @notice Unfreeze patial tokens of multiples wallets\n     *  @param userAddresses {address[]} of user addresses\n     *  @param amounts {uint256[]} of amounts of token to be unfreezed\n     */\n    function batchUnfreezePartialTokens(address[] calldata userAddresses, uint256[] calldata amounts) external;\n\n    /**\n     * @notice Freeze token of one address wallet periodically\n     * @param startTime {uint256} Start time of freezing partial token\n     * @param endTime {uint256} End time of freezing partial token\n     * @param amountFreezed {uint256} Amount of frozen token\n     * @param userAddress {address} Address wallet of the user frozen token\n     */\n    function setFreezedTokensPeriod(\n        uint256 startTime,\n        uint256 endTime,\n        uint256 amountFreezed,\n        address userAddress\n    ) external;\n\n    /**\n     * @notice Retrieve struct of freezed tokens in period of msg.sender\n     * @return freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period\n     */\n    function myFreezedTokensPeriod() external view returns (TokenLibrary.FreezePeriod memory);\n\n    /**\n     * @notice Retrieve struct of freezed tokens in period of one wallet address by agent\n     * @param userAddress {address} of the user freezed tokens\n     * @return freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period\n     */\n    function getFreezedTokensPeriod(address userAddress) external view returns (TokenLibrary.FreezePeriod memory);\n\n    /**\n     * @notice Get unlockable tokens freezed in period for msg.sender\n     * @return unlockable {uint256} of unlockable tokens freezed in period\n     */\n    function unlockableTokensPeriod() external view returns (uint256);\n\n    /**\n     * @notice Redeem unlockable freezed tokens periodically\n     * @return success {bool} success of redeeming tokens\n     */\n    function redeemFreezedTokens() external returns (bool);\n\n    /**\n     * @notice Withdraw tokens amount of contract balance\n     * @param amount {uint256} the number of tokens transferred\n     * @param receiver {address} the recipient of the token transfer\n     */\n    function withdraw(uint256 amount, address receiver) external;\n\n    /**\n     * @notice Check amount of withdrawable\n     * @param amount {uint256} the number of tokens withdraw\n     * @return weiWithdrawable {uint256} the number of wei transferrable\n     */\n    function withdrawable(uint256 amount) external view returns(uint256 weiWithdrawable);\n}\n",
  "sourcePath": "/home/solid-solution/Bureau/HOMEWORK/Smart-Starter/smart-contract/contracts/interfaces/IProxySecurityToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IProxySecurityToken.sol",
    "exportedSymbols": {
      "IProxySecurityToken": [
        2450
      ],
      "ISecurityTokenImmutable": [
        2614
      ],
      "StorageToken": [
        2210
      ],
      "TokenLibrary": [
        2660
      ]
    },
    "id": 2451,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2212,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "project:/contracts/immutable/StorageToken.sol",
        "file": "../immutable/StorageToken.sol",
        "id": 2213,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2451,
        "sourceUnit": 2211,
        "src": "59:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/library/TokenLibrary.sol",
        "file": "../library/TokenLibrary.sol",
        "id": 2214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2451,
        "sourceUnit": 2661,
        "src": "99:37:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/ISecurityTokenImmutable.sol",
        "file": "../interfaces/ISecurityTokenImmutable.sol",
        "id": 2215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2451,
        "sourceUnit": 2615,
        "src": "137:51:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IProxySecurityToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 2450,
        "linearizedBaseContracts": [
          2450
        ],
        "name": "IProxySecurityToken",
        "nameLocation": "200:19:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2216,
              "nodeType": "StructuredDocumentation",
              "src": "227:179:9",
              "text": " @notice set the contract address of security token immutable\n @param _securityTokenImmutableAddress {address} address of security token immutable contract"
            },
            "functionSelector": "881bd973",
            "id": 2221,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSecurityTokenImmutable",
            "nameLocation": "420:25:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "_securityTokenImmutableAddress",
                  "nameLocation": "454:30:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "446:38:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:40:9"
            },
            "returnParameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:9"
            },
            "scope": 2450,
            "src": "411:84:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2222,
              "nodeType": "StructuredDocumentation",
              "src": "501:136:9",
              "text": " @notice Returns the version of the token contract\n @return TOKEN_VERSION {string} version of the smart contract"
            },
            "functionSelector": "54fd4d50",
            "id": 2227,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nameLocation": "651:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:9"
            },
            "returnParameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "684:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:15:9"
            },
            "scope": 2450,
            "src": "642:57:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2228,
              "nodeType": "StructuredDocumentation",
              "src": "705:138:9",
              "text": " @notice Returns the address wallet of the smart contract owner.\n @return owner {address} wallet addres from owner"
            },
            "functionSelector": "8da5cb5b",
            "id": 2233,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "857:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:2:9"
            },
            "returnParameters": {
              "id": 2232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2233,
                  "src": "888:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:9:9"
            },
            "scope": 2450,
            "src": "848:49:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2234,
              "nodeType": "StructuredDocumentation",
              "src": "903:124:9",
              "text": " @notice Transfer ownership of the smart contract\n @param account {address} address of the new owner"
            },
            "functionSelector": "f2fde38b",
            "id": 2239,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "1041:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2236,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1067:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "1059:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1058:17:9"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:0:9"
            },
            "scope": 2450,
            "src": "1032:53:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2240,
              "nodeType": "StructuredDocumentation",
              "src": "1091:240:9",
              "text": " @notice Return not freezed tokens from an address wallet\n @param account {address} wallet address of account you want to get not freezed balance\n @return balance {uint256} balance of wallet address totaly open"
            },
            "functionSelector": "afde442a",
            "id": 2247,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "eligibleBalanceOf",
            "nameLocation": "1345:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2242,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1371:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1363:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1362:17:9"
            },
            "returnParameters": {
              "id": 2246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2247,
                  "src": "1402:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:9:9"
            },
            "scope": 2450,
            "src": "1336:75:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2248,
              "nodeType": "StructuredDocumentation",
              "src": "1417:335:9",
              "text": " @notice Mint and send `amount` tokens to `to`\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event.\n @param to {address} wallet to send the token\n @param amount {uint256} amount to mint\n @return result {boolean} success or failure"
            },
            "functionSelector": "40c10f19",
            "id": 2257,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1766:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1779:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1771:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1791:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1783:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:28:9"
            },
            "returnParameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "1825:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:6:9"
            },
            "scope": 2450,
            "src": "1757:74:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2258,
              "nodeType": "StructuredDocumentation",
              "src": "1837:289:9",
              "text": " @notice Remove `amount` tokens from `account`\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event.\n @param account {address} wallet to burn the token\n @param amount {uint256} amount to burn"
            },
            "functionSelector": "9dc29fac",
            "id": 2267,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2140:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2153:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2267,
                  "src": "2145:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2262,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2170:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2267,
                  "src": "2162:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:33:9"
            },
            "returnParameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2267,
                  "src": "2196:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2195:6:9"
            },
            "scope": 2450,
            "src": "2131:71:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2268,
              "nodeType": "StructuredDocumentation",
              "src": "2208:190:9",
              "text": " @notice Return amount of refoundable for amount of tokens burned\n @param amount {uint256} amout of tokens burn\n @return wei {uint256} amount of wei refoundable"
            },
            "functionSelector": "586abfbd",
            "id": 2275,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refoundable",
            "nameLocation": "2412:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2270,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2432:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2424:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2424:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2423:16:9"
            },
            "returnParameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "2462:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:9:9"
            },
            "scope": 2450,
            "src": "2403:68:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2276,
              "nodeType": "StructuredDocumentation",
              "src": "2477:315:9",
              "text": " @dev Transfer and send `amount` tokens from `_msgSender()` to `to`\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event.\n @param to {address} wallet to transfer the token\n @param amount {uint256[]} amount to transfer"
            },
            "functionSelector": "a9059cbb",
            "id": 2285,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2806:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2823:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "2815:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2835:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "2827:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2814:28:9"
            },
            "returnParameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "2861:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2282,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2860:6:9"
            },
            "scope": 2450,
            "src": "2797:70:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2286,
              "nodeType": "StructuredDocumentation",
              "src": "2873:367:9",
              "text": " @dev Transfer and send `amount` tokens from `from` to `to`\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event.\n @param from {address} wallet from transfer the token\n @param to {address} wallet to transfer the token\n @param amount {uint256[]} amount to transfer"
            },
            "functionSelector": "23b872dd",
            "id": 2297,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3254:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2288,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3275:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "3267:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3267:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3289:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "3281:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3301:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "3293:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3266:42:9"
            },
            "returnParameters": {
              "id": 2296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2297,
                  "src": "3327:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3326:6:9"
            },
            "scope": 2450,
            "src": "3245:88:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2298,
              "nodeType": "StructuredDocumentation",
              "src": "3339:387:9",
              "text": " @notice Interface of transfer method, return hex code error message\n @param operator {address} operator of transaction (sender)\n @param from {address} the origin of the token transfer\n @param to {address} the recipient of the token transfer\n @param value {uint256} the number of tokens transferred\n @return hex {bytes1} code error message"
            },
            "functionSelector": "6d62a4fe",
            "id": 2311,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canTransfer",
            "nameLocation": "3740:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2300,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3769:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "3761:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3761:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2302,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3795:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "3787:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3787:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3817:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "3809:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3837:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "3829:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:97:9"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "3872:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 2308,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:8:9"
            },
            "scope": 2450,
            "src": "3731:149:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2312,
              "nodeType": "StructuredDocumentation",
              "src": "3886:243:9",
              "text": "  @notice Force an address wallet to transfer by agent\n  @param from {address} from wallet to transfer\n  @param to {address} to wallet to transfer\n  @param amount {uint256} amounts of tokens to be transfered"
            },
            "functionSelector": "33bebb77",
            "id": 2323,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forceTransfer",
            "nameLocation": "4143:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4174:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "4166:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4166:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2316,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4196:2:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "4188:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4188:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4216:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "4208:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4208:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4156:72:9"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "4247:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4247:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4246:6:9"
            },
            "scope": 2450,
            "src": "4134:119:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2324,
              "nodeType": "StructuredDocumentation",
              "src": "4259:184:9",
              "text": "  @notice Return freezed or not wallet address tokens\n  @param userAddress {address} of the user\n  @return frozen {bool} represents freezed wallet address"
            },
            "functionSelector": "e5839836",
            "id": 2331,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isFrozen",
            "nameLocation": "4457:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4474:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "4466:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4465:21:9"
            },
            "returnParameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2331,
                  "src": "4510:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4509:6:9"
            },
            "scope": 2450,
            "src": "4448:68:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2332,
              "nodeType": "StructuredDocumentation",
              "src": "4522:187:9",
              "text": "  @notice Return freezed tokens amount of wallet address\n  @param userAddress {address} of the user\n  @return frozenTokens {uint256} amount of freezed tokens"
            },
            "functionSelector": "158b1a57",
            "id": 2339,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFrozenTokens",
            "nameLocation": "4723:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4747:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "4739:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4738:21:9"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2339,
                  "src": "4783:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4782:9:9"
            },
            "scope": 2450,
            "src": "4714:78:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2340,
              "nodeType": "StructuredDocumentation",
              "src": "4798:178:9",
              "text": "  @notice Freeze totality tokens of single wallet address\n  @param userAddress {address} of the user\n  @param freeze {boolean} representing freezing"
            },
            "functionSelector": "c69c09cf",
            "id": 2347,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setAddressFrozen",
            "nameLocation": "4990:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "5015:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "5007:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "freeze",
                  "nameLocation": "5033:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2347,
                  "src": "5028:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5028:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:34:9"
            },
            "returnParameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5049:0:9"
            },
            "scope": 2450,
            "src": "4981:69:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2348,
              "nodeType": "StructuredDocumentation",
              "src": "5056:192:9",
              "text": "  @notice Freeze totality tokens of multiples wallet addresses\n  @param userAddresses {address[]} of user addresses\n  @param freeze {bool[]} representing freezing"
            },
            "functionSelector": "1a7af379",
            "id": 2357,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchSetAddressFrozen",
            "nameLocation": "5262:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2351,
                  "mutability": "mutable",
                  "name": "userAddresses",
                  "nameLocation": "5303:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "5284:32:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2349,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5284:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2350,
                    "nodeType": "ArrayTypeName",
                    "src": "5284:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2354,
                  "mutability": "mutable",
                  "name": "freeze",
                  "nameLocation": "5334:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "5318:22:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2352,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "5318:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2353,
                    "nodeType": "ArrayTypeName",
                    "src": "5318:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5283:58:9"
            },
            "returnParameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5350:0:9"
            },
            "scope": 2450,
            "src": "5253:98:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2358,
              "nodeType": "StructuredDocumentation",
              "src": "5358:171:9",
              "text": "  @notice Freeze patial tokens of single wallet\n  @param userAddress {address} of the user\n  @param amount {uint256} of token to be unfreezed"
            },
            "functionSelector": "125c4a33",
            "id": 2365,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezePartialTokens",
            "nameLocation": "5543:19:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "5571:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "5563:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5563:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5592:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2365,
                  "src": "5584:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5584:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5562:37:9"
            },
            "returnParameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5608:0:9"
            },
            "scope": 2450,
            "src": "5534:75:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2366,
              "nodeType": "StructuredDocumentation",
              "src": "5615:199:9",
              "text": "  @notice Freeze patial tokens of multiples wallets\n  @param userAddresses {address[]} of user addresses\n  @param amounts {uint256[]} of amounts of token to be unfreezed"
            },
            "functionSelector": "fc7e5fa8",
            "id": 2375,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchFreezePartialTokens",
            "nameLocation": "5828:24:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "userAddresses",
                  "nameLocation": "5872:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
                  "src": "5853:32:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2367,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5853:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2368,
                    "nodeType": "ArrayTypeName",
                    "src": "5853:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "5906:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
                  "src": "5887:26:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2370,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5887:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2371,
                    "nodeType": "ArrayTypeName",
                    "src": "5887:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5852:62:9"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5923:0:9"
            },
            "scope": 2450,
            "src": "5819:105:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2376,
              "nodeType": "StructuredDocumentation",
              "src": "5930:173:9",
              "text": "  @notice Unfreeze patial tokens of single wallet\n  @param userAddress {address} of the user\n  @param amount {uint256} of token to be unfreezed"
            },
            "functionSelector": "1fe56f7d",
            "id": 2383,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unfreezePartialTokens",
            "nameLocation": "6117:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "6147:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2383,
                  "src": "6139:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6168:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2383,
                  "src": "6160:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6160:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6138:37:9"
            },
            "returnParameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6184:0:9"
            },
            "scope": 2450,
            "src": "6108:77:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2384,
              "nodeType": "StructuredDocumentation",
              "src": "6191:201:9",
              "text": "  @notice Unfreeze patial tokens of multiples wallets\n  @param userAddresses {address[]} of user addresses\n  @param amounts {uint256[]} of amounts of token to be unfreezed"
            },
            "functionSelector": "4710362d",
            "id": 2393,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchUnfreezePartialTokens",
            "nameLocation": "6406:26:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "userAddresses",
                  "nameLocation": "6452:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "6433:32:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2385,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6433:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2386,
                    "nodeType": "ArrayTypeName",
                    "src": "6433:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2390,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6486:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "6467:26:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2388,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6467:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2389,
                    "nodeType": "ArrayTypeName",
                    "src": "6467:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:62:9"
            },
            "returnParameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6503:0:9"
            },
            "scope": 2450,
            "src": "6397:107:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2394,
              "nodeType": "StructuredDocumentation",
              "src": "6510:349:9",
              "text": " @notice Freeze token of one address wallet periodically\n @param startTime {uint256} Start time of freezing partial token\n @param endTime {uint256} End time of freezing partial token\n @param amountFreezed {uint256} Amount of frozen token\n @param userAddress {address} Address wallet of the user frozen token"
            },
            "functionSelector": "85269dcb",
            "id": 2405,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFreezedTokensPeriod",
            "nameLocation": "6873:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "6913:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "6905:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6905:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2398,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "6940:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "6932:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6932:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "amountFreezed",
                  "nameLocation": "6965:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "6957:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "6996:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "6988:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6988:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6895:118:9"
            },
            "returnParameters": {
              "id": 2404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7022:0:9"
            },
            "scope": 2450,
            "src": "6864:159:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2406,
              "nodeType": "StructuredDocumentation",
              "src": "7029:176:9",
              "text": " @notice Retrieve struct of freezed tokens in period of msg.sender\n @return freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period"
            },
            "functionSelector": "c7464bf1",
            "id": 2412,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "myFreezedTokensPeriod",
            "nameLocation": "7219:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7240:2:9"
            },
            "returnParameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "7266:32:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FreezePeriod_$2634_memory_ptr",
                    "typeString": "struct TokenLibrary.FreezePeriod"
                  },
                  "typeName": {
                    "id": 2409,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2408,
                      "name": "TokenLibrary.FreezePeriod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2634,
                      "src": "7266:25:9"
                    },
                    "referencedDeclaration": 2634,
                    "src": "7266:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FreezePeriod_$2634_storage_ptr",
                      "typeString": "struct TokenLibrary.FreezePeriod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7265:34:9"
            },
            "scope": 2450,
            "src": "7210:90:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2413,
              "nodeType": "StructuredDocumentation",
              "src": "7306:256:9",
              "text": " @notice Retrieve struct of freezed tokens in period of one wallet address by agent\n @param userAddress {address} of the user freezed tokens\n @return freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period"
            },
            "functionSelector": "6df68630",
            "id": 2421,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFreezedTokensPeriod",
            "nameLocation": "7576:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "7607:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "7599:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7599:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7598:21:9"
            },
            "returnParameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2419,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2421,
                  "src": "7643:32:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FreezePeriod_$2634_memory_ptr",
                    "typeString": "struct TokenLibrary.FreezePeriod"
                  },
                  "typeName": {
                    "id": 2418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2417,
                      "name": "TokenLibrary.FreezePeriod",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2634,
                      "src": "7643:25:9"
                    },
                    "referencedDeclaration": 2634,
                    "src": "7643:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FreezePeriod_$2634_storage_ptr",
                      "typeString": "struct TokenLibrary.FreezePeriod"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7642:34:9"
            },
            "scope": 2450,
            "src": "7567:110:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2422,
              "nodeType": "StructuredDocumentation",
              "src": "7683:156:9",
              "text": " @notice Get unlockable tokens freezed in period for msg.sender\n @return unlockable {uint256} of unlockable tokens freezed in period"
            },
            "functionSelector": "9d200d1f",
            "id": 2427,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockableTokensPeriod",
            "nameLocation": "7853:22:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7875:2:9"
            },
            "returnParameters": {
              "id": 2426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "7901:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7901:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7900:9:9"
            },
            "scope": 2450,
            "src": "7844:66:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2428,
              "nodeType": "StructuredDocumentation",
              "src": "7916:130:9",
              "text": " @notice Redeem unlockable freezed tokens periodically\n @return success {bool} success of redeeming tokens"
            },
            "functionSelector": "c7b0d8b7",
            "id": 2433,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemFreezedTokens",
            "nameLocation": "8060:19:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8079:2:9"
            },
            "returnParameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2433,
                  "src": "8100:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8099:6:9"
            },
            "scope": 2450,
            "src": "8051:55:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2434,
              "nodeType": "StructuredDocumentation",
              "src": "8112:202:9",
              "text": " @notice Withdraw tokens amount of contract balance\n @param amount {uint256} the number of tokens transferred\n @param receiver {address} the recipient of the token transfer"
            },
            "functionSelector": "00f714ce",
            "id": 2441,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "8328:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8345:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "8337:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8337:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2438,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8361:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "8353:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8353:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8336:34:9"
            },
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8379:0:9"
            },
            "scope": 2450,
            "src": "8319:61:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2442,
              "nodeType": "StructuredDocumentation",
              "src": "8386:189:9",
              "text": " @notice Check amount of withdrawable\n @param amount {uint256} the number of tokens withdraw\n @return weiWithdrawable {uint256} the number of wei transferrable"
            },
            "functionSelector": "f11988e0",
            "id": 2449,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawable",
            "nameLocation": "8589:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8610:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "8602:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8602:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8601:16:9"
            },
            "returnParameters": {
              "id": 2448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2447,
                  "mutability": "mutable",
                  "name": "weiWithdrawable",
                  "nameLocation": "8648:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "8640:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8640:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8639:25:9"
            },
            "scope": 2450,
            "src": "8580:85:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2451,
        "src": "190:8477:9",
        "usedErrors": []
      }
    ],
    "src": "33:8635:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2023-02-22T22:44:44.422Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "batchFreezePartialTokens(address[],uint256[])": {
        "params": {
          "amounts": "{uint256[]} of amounts of token to be unfreezed",
          "userAddresses": "{address[]} of user addresses"
        }
      },
      "batchSetAddressFrozen(address[],bool[])": {
        "params": {
          "freeze": "{bool[]} representing freezing",
          "userAddresses": "{address[]} of user addresses"
        }
      },
      "batchUnfreezePartialTokens(address[],uint256[])": {
        "params": {
          "amounts": "{uint256[]} of amounts of token to be unfreezed",
          "userAddresses": "{address[]} of user addresses"
        }
      },
      "burn(address,uint256)": {
        "params": {
          "account": "{address} wallet to burn the token",
          "amount": "{uint256} amount to burn"
        }
      },
      "canTransfer(address,address,address,uint256)": {
        "params": {
          "from": "{address} the origin of the token transfer",
          "operator": "{address} operator of transaction (sender)",
          "to": "{address} the recipient of the token transfer",
          "value": "{uint256} the number of tokens transferred"
        },
        "returns": {
          "_0": "hex {bytes1} code error message"
        }
      },
      "eligibleBalanceOf(address)": {
        "params": {
          "account": "{address} wallet address of account you want to get not freezed balance"
        },
        "returns": {
          "_0": "balance {uint256} balance of wallet address totaly open"
        }
      },
      "forceTransfer(address,address,uint256)": {
        "params": {
          "amount": "{uint256} amounts of tokens to be transfered",
          "from": "{address} from wallet to transfer",
          "to": "{address} to wallet to transfer"
        }
      },
      "freezePartialTokens(address,uint256)": {
        "params": {
          "amount": "{uint256} of token to be unfreezed",
          "userAddress": "{address} of the user"
        }
      },
      "getFreezedTokensPeriod(address)": {
        "params": {
          "userAddress": "{address} of the user freezed tokens"
        },
        "returns": {
          "_0": "freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period"
        }
      },
      "getFrozenTokens(address)": {
        "params": {
          "userAddress": "{address} of the user"
        },
        "returns": {
          "_0": "frozenTokens {uint256} amount of freezed tokens"
        }
      },
      "isFrozen(address)": {
        "params": {
          "userAddress": "{address} of the user"
        },
        "returns": {
          "_0": "frozen {bool} represents freezed wallet address"
        }
      },
      "mint(address,uint256)": {
        "params": {
          "amount": "{uint256} amount to mint",
          "to": "{address} wallet to send the token"
        },
        "returns": {
          "_0": "result {boolean} success or failure"
        }
      },
      "myFreezedTokensPeriod()": {
        "returns": {
          "_0": "freezedPeriod {TokenLibrary.FreezePeriod} struct of freezed tokens in period"
        }
      },
      "owner()": {
        "returns": {
          "_0": "owner {address} wallet addres from owner"
        }
      },
      "redeemFreezedTokens()": {
        "returns": {
          "_0": "success {bool} success of redeeming tokens"
        }
      },
      "refoundable(uint256)": {
        "params": {
          "amount": "{uint256} amout of tokens burn"
        },
        "returns": {
          "_0": "wei {uint256} amount of wei refoundable"
        }
      },
      "setAddressFrozen(address,bool)": {
        "params": {
          "freeze": "{boolean} representing freezing",
          "userAddress": "{address} of the user"
        }
      },
      "setFreezedTokensPeriod(uint256,uint256,uint256,address)": {
        "params": {
          "amountFreezed": "{uint256} Amount of frozen token",
          "endTime": "{uint256} End time of freezing partial token",
          "startTime": "{uint256} Start time of freezing partial token",
          "userAddress": "{address} Address wallet of the user frozen token"
        }
      },
      "setSecurityTokenImmutable(address)": {
        "params": {
          "_securityTokenImmutableAddress": "{address} address of security token immutable contract"
        }
      },
      "transfer(address,uint256)": {
        "details": "Transfer and send `amount` tokens from `_msgSender()` to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.",
        "params": {
          "amount": "{uint256[]} amount to transfer",
          "to": "{address} wallet to transfer the token"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer and send `amount` tokens from `from` to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.",
        "params": {
          "amount": "{uint256[]} amount to transfer",
          "from": "{address} wallet from transfer the token",
          "to": "{address} wallet to transfer the token"
        }
      },
      "transferOwnership(address)": {
        "params": {
          "account": "{address} address of the new owner"
        }
      },
      "unfreezePartialTokens(address,uint256)": {
        "params": {
          "amount": "{uint256} of token to be unfreezed",
          "userAddress": "{address} of the user"
        }
      },
      "unlockableTokensPeriod()": {
        "returns": {
          "_0": "unlockable {uint256} of unlockable tokens freezed in period"
        }
      },
      "version()": {
        "returns": {
          "_0": "TOKEN_VERSION {string} version of the smart contract"
        }
      },
      "withdraw(uint256,address)": {
        "params": {
          "amount": "{uint256} the number of tokens transferred",
          "receiver": "{address} the recipient of the token transfer"
        }
      },
      "withdrawable(uint256)": {
        "params": {
          "amount": "{uint256} the number of tokens withdraw"
        },
        "returns": {
          "weiWithdrawable": "{uint256} the number of wei transferrable"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "batchFreezePartialTokens(address[],uint256[])": {
        "notice": "Freeze patial tokens of multiples wallets"
      },
      "batchSetAddressFrozen(address[],bool[])": {
        "notice": "Freeze totality tokens of multiples wallet addresses"
      },
      "batchUnfreezePartialTokens(address[],uint256[])": {
        "notice": "Unfreeze patial tokens of multiples wallets"
      },
      "burn(address,uint256)": {
        "notice": "Remove `amount` tokens from `account` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "canTransfer(address,address,address,uint256)": {
        "notice": "Interface of transfer method, return hex code error message"
      },
      "eligibleBalanceOf(address)": {
        "notice": "Return not freezed tokens from an address wallet"
      },
      "forceTransfer(address,address,uint256)": {
        "notice": "Force an address wallet to transfer by agent"
      },
      "freezePartialTokens(address,uint256)": {
        "notice": "Freeze patial tokens of single wallet"
      },
      "getFreezedTokensPeriod(address)": {
        "notice": "Retrieve struct of freezed tokens in period of one wallet address by agent"
      },
      "getFrozenTokens(address)": {
        "notice": "Return freezed tokens amount of wallet address"
      },
      "isFrozen(address)": {
        "notice": "Return freezed or not wallet address tokens"
      },
      "mint(address,uint256)": {
        "notice": "Mint and send `amount` tokens to `to` Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "myFreezedTokensPeriod()": {
        "notice": "Retrieve struct of freezed tokens in period of msg.sender"
      },
      "owner()": {
        "notice": "Returns the address wallet of the smart contract owner."
      },
      "redeemFreezedTokens()": {
        "notice": "Redeem unlockable freezed tokens periodically"
      },
      "refoundable(uint256)": {
        "notice": "Return amount of refoundable for amount of tokens burned"
      },
      "setAddressFrozen(address,bool)": {
        "notice": "Freeze totality tokens of single wallet address"
      },
      "setFreezedTokensPeriod(uint256,uint256,uint256,address)": {
        "notice": "Freeze token of one address wallet periodically"
      },
      "setSecurityTokenImmutable(address)": {
        "notice": "set the contract address of security token immutable"
      },
      "transferOwnership(address)": {
        "notice": "Transfer ownership of the smart contract"
      },
      "unfreezePartialTokens(address,uint256)": {
        "notice": "Unfreeze patial tokens of single wallet"
      },
      "unlockableTokensPeriod()": {
        "notice": "Get unlockable tokens freezed in period for msg.sender"
      },
      "version()": {
        "notice": "Returns the version of the token contract"
      },
      "withdraw(uint256,address)": {
        "notice": "Withdraw tokens amount of contract balance"
      },
      "withdrawable(uint256)": {
        "notice": "Check amount of withdrawable"
      }
    },
    "version": 1
  }
}